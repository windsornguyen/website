@import 'tailwindcss';

@source './**/*.{js,ts,jsx,tsx,mdx}';

@variant dark (&:is(.dark *));

@theme {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    text-rendering: optimizeLegibility;
  }

  h1,
  h2,
  h3,
  h4 {
    text-wrap: balance;
  }

  pre {
    background-color: #16161e;
    border-radius: var(--radius);
    overflow-x: auto;
    padding: 1rem;
    margin: 1.5rem 0;
    line-height: 1.5;
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
  }

  pre::-webkit-scrollbar {
    display: none;
  }

  pre {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  code {
    font-family: 'Menlo', 'Monaco', 'Courier New', monospace;
    font-size: 14px;
    padding: 0.2em 0.4em;
    border-radius: 0.3em;
    background-color: var(--color-gray-100);
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
  }

  pre code {
    background-color: transparent;
    padding: 0;
    border: none;
    font-size: 14px;
    line-height: 1.5;
  }

  pre code > span .sh__token--identifier {
    color: white !important;
  }

  code:not(pre code) span {
    font-weight: 500;
    color: black !important;
  }

  pre code span {
    font-weight: 500;
  }

  hr {
    color: var(--color-gray-200);
  }

  input[type='text'],
  input[type='email'] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }

  table {
    display: block;
    max-width: fit-content;
    overflow-x: auto;
    white-space: nowrap;
  }

  .transition-element {
    view-transition-name: windsor;
    will-change: transform, opacity;
    transform: translateZ(0);
    transform-origin: 0 0;
    backface-visibility: hidden;
    perspective: 1000px;
    contain: layout style paint;
  }

  ::view-transition-old(windsor) {
    animation: fade-out 0.2s cubic-bezier(0.65, 0, 0.35, 1) forwards;
  }

  ::view-transition-new(windsor) {
    animation: fade-in-up 0.2s cubic-bezier(0.65, 0, 0.35, 1) forwards;
  }

  @keyframes fade-out {
    0% {
      transform: translate3d(0, 0, 0);
      opacity: 1;
      font-weight: 500;
    }
    100% {
      transform: translate3d(0, 24px, 0);
      opacity: 0;
    }
  }

  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes fade-in-up {
    0% {
      transform: translate3d(0, 24px, 0);
      opacity: 0;
    }
    100% {
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
  }

  @supports (view-transition-name: none) {
    .fade-in {
      animation: fade-in 0.2s cubic-bezier(0.65, 0, 0.35, 1) forwards;
      opacity: 0;
    }
  }

  @supports not (view-transition-name: none) {
    .transition-element {
      animation: fade-in-up 0.2s cubic-bezier(0.65, 0, 0.35, 1) forwards;
    }
  }
}

@layer utilities {
  :root {
    --font-family-sans: 'Inter', sans-serif;
    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 214, 219, 220;
    --background-end-rgb: 255, 255, 255;
    --sh-class: #7aa2f7;
    --sh-sign: #89ddff;
    --sh-string: #9ece6a;
    --sh-keyword: #bb9af7;
    --sh-comment: #565f89;
    --sh-jsxliterals: #7aa2f7;
    --sh-property: #73daca;
    --sh-entity: #e0af68;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --foreground-rgb: 255, 255, 255;
      --background-start-rgb: 0, 0, 0;
      --background-end-rgb: 0, 0, 0;
    }
  }
}

@layer utilities {
  @keyframes blink {
    0%,
    50%,
    100% {
      opacity: 1;
    }
    25%,
    75% {
      opacity: 0;
    }
  }

  .logo:nth-child(odd) {
    color: blue;
  }

  .logo:nth-child(even) {
    color: red;
  }
}

/* Dark theme adjustments moved outside `@layer base` */
.dark {
  --background: 0 0% 3.9%;
  --foreground: 0 0% 98%;
  --card: 0 0% 3.9%;
  --card-foreground: 0 0% 98%;
  --popover: 0 0% 3.9%;
  --popover-foreground: 0 0% 98%;
  --primary: 0 0% 98%;
  --primary-foreground: 0 0% 9%;
  --secondary: 0 0% 14.9%;
  --secondary-foreground: 0 0% 98%;
  --muted: 0 0% 14.9%;
  --muted-foreground: 0 0% 63.9%;
  --accent: 0 0% 14.9%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 0% 98%;
  --border: 0 0% 14.9%;
  --input: 0 0% 14.9%;
  --ring: 0 0% 83.1%;
  --chart-1: 220 70% 50%;
  --chart-2: 160 60% 45%;
  --chart-3: 30 80% 55%;
  --chart-4: 280 65% 60%;
  --chart-5: 340 75% 55%;
}

/* Moved @utility directives to top level */
@utility blinking-cursor {
  &::after {
    content: '|';
    color: var(--text-secondary-300, #89ddff);
    animation: blink 1s step-start infinite;
  }
}

@utility no-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@utility prevent-bounce {
  overscroll-behavior-y: none;
}
